#!/bin/bash

# Entire code generated by Claude Sonet 3.5


echo "Repository Analytics"

# Average commits
total_commits=$(git rev-list --count HEAD)
days_since_first_commit=$(( ( $(date +%s) - $(git log --reverse --format=%ct | head -1) ) / 86400 ))
commits_per_day=$(echo "scale=2; $total_commits / $days_since_first_commit" | bc)
commits_per_week=$(echo "scale=2; $commits_per_day * 7" | bc)
commits_per_month=$(echo "scale=2; $commits_per_day * 30" | bc)

echo "Average commits per day: $commits_per_day"
echo "Average commits per week: $commits_per_week"
echo "Average commits per month: $commits_per_month"

# Unique contributors
echo -e "\nNumber of unique contributors:"
git shortlog -sn --no-merges | wc -l

# Top 10 committers
echo -e "\nTop 10 committers:"
git shortlog -sn --no-merges | head -n 10

# Last and first commit dates
echo -e "\nLast commit date:"
git log -1 --format=%cd

echo -e "\nFirst commit date:"
git log --reverse --format=%cd | head -1

# Lines of code added/removed over time (entire history)
echo -e "\nTotal lines of code added/removed (entire history):"
git log --pretty=tformat: --numstat | awk '{ added += $1; removed += $2 } END { print "Added: " added, "\nRemoved: " removed, "\nNet change: " added - removed }'


# Files most frequently changed (top 10)
echo -e "\nTop 10 most frequently changed files:"
git log --pretty=format: --name-only | sort | uniq -c | sort -rn | head -n 10


# Number of active branches
echo -e "\nNumber of active branches:"
git branch -r | wc -l

# Total number of files
echo -e "\nTotal number of files:"
git ls-files | wc -l

# Number of files by extension and percentage contribution
echo -e "\nNumber of files by extension and percentage contribution:"
total_files=$(git ls-files | wc -l)
git ls-files | sed -n 's/.*\.\([^.]*\)$/\1/p' | sort | uniq -c | sort -rn | while read count ext; do
    percentage=$(echo "scale=2; $count / $total_files * 100" | bc)
    printf "%5d (%.2f%%) %s\n" $count $percentage $ext
done
